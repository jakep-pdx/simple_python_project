name: build simple python project

on:
  push:
    branches:
      - "main"
  # workflow_dispatch:
  #   inputs:
  #     publishPackage:
  #       description: Publish Package
  #       required: true
  #       default: false
  #       type: boolean
  #     versionType:
  #       description: 'Version Type'
  #       required: true
  #       default: 'PATCH'
  #       type: choice
  #       options:
  #       - 'PATCH'
  #       - 'MINOR'
  #       - 'MAJOR'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        path: simple_python_project
    
    - name: set vars
      run: |
        publishPackage="false"
        if [ "${{ github.event.inputs.publishPackage }}" != "" ]
        then
          publishPackage="${{ github.event.inputs.publishPackage }}"
        fi
        echo "publishPackage=$publishPackage" >> $GITHUB_ENV

        versionType="PATCH"
        if [ "${{ github.event.inputs.versionType }}" != "" ]
        then
          versionType="${{ github.event.inputs.versionType }}"
        fi
        echo "versionType=$versionType" >> $GITHUB_ENV

    - name: check vars
      run: |
        echo "publishPackage: ${{ env.publishPackage }}"
        echo "versionType: ${{ env.versionType }}"

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f simple_python_project/requirements-dev.txt ]; then pip install -r simple_python_project/requirements-dev.txt; fi

    - name: Run pylint
      run: |
        pylint simple_python_project/simple_py_proj --fail-under=8

    - name: Run pytest
      run: |
        pytest simple_python_project --cov-report=html --cov-branch --cov=.

    - name: Check coverage
      run: |
        coverage report --fail-under=80 --omit="setup.py,*/__init__.py,*/tests/*"

    # - name: Get next version
    #   continue-on-error: true
    #   run: |
    #     pip download simple_python_project
    #     file_name=$(ls simple_python_project*.whl)
    #     if [ "$file_name" != "" ]
    #       then
    #       pip install $file_name
    #       new_ver=$(get_next_ver_file_name $file_name ${{ env.versionType }})
    #       echo "new_ver: "$new_ver
    #       echo "new_ver=$new_ver" >> $GITHUB_ENV
    #     else
    #       echo "unable to get next version"
    #     fi

    # - name: Build package
    #   run: |
    #     cd simple_python_project
    #     python -m build --wheel


    #     cd dist
    #     pkg_name=$(ls *.whl)
    #     echo "pkg_name: "$pkg_name
    #     echo "pkg_name=$pkg_name" >> $GITHUB_ENV
  
    # - name: Upload package 
    #   if: ${{ env.publishPackage == 'true' }}
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: ${{ env.pkg_name }}
    #     path: simple_python_project/dist/*.whl


    # - name: Publish package to pypi
    #   if: ${{ env.publishPackage == 'true' }}
    #   uses: pypa/gh-action-pypi-publish@release/v1.5
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}
    #     packages_dir: simple_python_project/dist
